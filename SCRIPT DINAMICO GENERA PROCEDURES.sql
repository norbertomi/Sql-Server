--NOMBRE DE ESQUEMA
DECLARE @TABLE_SCHEMA NVARCHAR(255) = 'dbo'

--NOMBRE DE INSTANCIA
DECLARE @DATABASE_NAME NVARCHAR(255) = 'MSC'


--SI NO SE QUIERE CREAR EL PROCEDURE DE INSERT 0 FALSE. EN CAMBIO SI SE QUIERE CREAR EL PROCEDURE DE INSERT 1 TRUE
DECLARE @INSERT BIT= 1

--SI NO SE QUIERE CREAR EL PROCEDURE DE UPDATE 0 FALSE. EN CAMBIO SI SE QUIERE CREAR EL PROCEDURE DE UPDATE 1 TRUE
DECLARE @UPDATE BIT = 1

--SI NO SE QUIERE CREAR EL PROCEDURE DE DELETE 0 FALSE. EN CAMBIO SI SE QUIERE CREAR EL PROCEDURE DE DELETE 1 TRUE
DECLARE @DELETE BIT = 1

--SI SE QUIEREN REAR LOS SP DE TODAS LAS TABLAS NULL, SI SE QUIEREN CREAR LOS SP DE UNA TABLA EN PARTICULAR 'NOMBRE DE TABLA'
DECLARE @TABLE_NAME NVARCHAR(255) = NULL

DECLARE @COLUMN_NAME NVARCHAR(255)
DECLARE @DATA_TYPE NVARCHAR(255)
DECLARE @CHARACTER_MAXIMUM_LENGTH NVARCHAR(255)
DECLARE @IS_NULLABLE NVARCHAR(1)
DECLARE @IS_PRIMARY_KEY NVARCHAR(1)
DECLARE @IS_IDENTITY NVARCHAR(1)
DECLARE @STRSQL NVARCHAR(MAX)
DECLARE @PROCEDURE NVARCHAR(255)
DECLARE @CAMPOS_WHERE NVARCHAR(MAX) 


DECLARE CUR CURSOR FOR
SELECT TABLE_NAME from Information_Schema.Tables
WHERE TABLE_SCHEMA=@TABLE_SCHEMA
AND TABLE_CATALOG = @DATABASE_NAME
AND TABLE_TYPE = 'BASE TABLE'
AND TABLE_NAME = ISNULL(@TABLE_NAME,TABLE_NAME)
--EXCLUYE LA TABLA DE DIAGRAMAS
AND TABLE_NAME <> 'sysdiagrams'

OPEN CUR

FETCH NEXT FROM CUR INTO @TABLE_NAME

WHILE @@fetch_status = 0


BEGIN
	--------CREA SP DE INSERT
	IF @INSERT=1
	
	BEGIN
		DECLARE @CAMPOS NVARCHAR(MAX)=''
		DECLARE @CAMPOS_VALUE NVARCHAR(MAX)=''
		SET @PROCEDURE= CONCAT('SP_',@TABLE_NAME,'_INSERT')
		IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = @PROCEDURE)
		BEGIN
			SET @STRSQL = CONCAT('DROP PROCEDURE ', @PROCEDURE)
			EXEC sp_executesql @STRSQL
		END
		
		SET @STRSQL = CONCAT('CREATE PROCEDURE ',@TABLE_SCHEMA,'.',@PROCEDURE,CHAR(13))
		DECLARE CUR_CAMPOS CURSOR FOR
		SELECT 
		C.COLUMN_NAME 
		,C.DATA_TYPE
		,C.CHARACTER_MAXIMUM_LENGTH
		,C.IS_NULLABLE
		,I.IS_PRIMARY_KEY
		,COLUMNPROPERTY(OBJECT_ID(c.TABLE_NAME),c.COLUMN_NAME,'IsIdentity')  AS IS_IDENTITY
		FROM INFORMATION_SCHEMA.COLUMNS C 
		LEFT JOIN(SELECT    
			T.NAME AS TABLE_NAME,
			TC.NAME AS COLUMN_NAME,
			I.IS_PRIMARY_KEY
		FROM 
			SYS.SCHEMAS S 
			INNER JOIN SYS.TABLES T   ON S.SCHEMA_ID=T.SCHEMA_ID
			INNER JOIN SYS.INDEXES I  ON T.OBJECT_ID=I.OBJECT_ID
			INNER JOIN SYS.INDEX_COLUMNS IC ON I.OBJECT_ID=IC.OBJECT_ID 
										   AND I.INDEX_ID=IC.INDEX_ID
			INNER JOIN SYS.COLUMNS TC ON IC.OBJECT_ID=TC.OBJECT_ID 
									 AND IC.COLUMN_ID=TC.COLUMN_ID
		WHERE T.TYPE='U'
		AND I.IS_PRIMARY_KEY=1
		) I
		ON C.TABLE_NAME = I.TABLE_NAME
		AND C.COLUMN_NAME = I.COLUMN_NAME
		WHERE C.TABLE_CATALOG=@DATABASE_NAME
		AND C.TABLE_NAME=@TABLE_NAME
		ORDER BY  C.ORDINAL_POSITION

		OPEN CUR_CAMPOS

		FETCH NEXT FROM CUR_CAMPOS INTO @COLUMN_NAME,@DATA_TYPE,@CHARACTER_MAXIMUM_LENGTH,@IS_NULLABLE,@IS_PRIMARY_KEY,@IS_IDENTITY
		WHILE @@fetch_status = 0
		BEGIN
			--ACA ARMO EL ENCABEZADO DEL PROCEDURE
		    --SI EL CAMPO NO TIENE LONGITUD, NO LA AGREGO EN LA DECLARACION DE VARIABLES
			IF @CHARACTER_MAXIMUM_LENGTH IS NULL
			BEGIN
				IF @IS_IDENTITY IS NULL OR @IS_IDENTITY=0
				BEGIN
					SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,',', CHAR(13))
					--AGREGO EN LA VARIABLE @CAMPOS, EL CAMPO PARA LUEGO HACER EL INSERT
					SET @CAMPOS = CONCAT(@CAMPOS,@COLUMN_NAME,',')
					SET @CAMPOS_VALUE = CONCAT(@CAMPOS_VALUE,'@',@COLUMN_NAME,',')
				END
			END
			ELSE
			 --SI EL CAMPO TIENE LONGITUD, LO AGREGO EN LA DECLARACION DE VARIABLES
			BEGIN
				IF @IS_IDENTITY IS NULL OR @IS_IDENTITY=0
				BEGIN
					SET @CHARACTER_MAXIMUM_LENGTH = (SELECT CASE @CHARACTER_MAXIMUM_LENGTH
						--ESTO ES POR SI EL VALOR DE LA VARIABLE ES -1 (MAX)
						WHEN '-1' THEN  'MAX'
						--ESTO ES POR SI EL TIPO DE DATO ES NTEXT
						WHEN '1073741823' THEN 'QUITAR_CAMPO'
						ELSE 
							@CHARACTER_MAXIMUM_LENGTH
						END)

					IF @CHARACTER_MAXIMUM_LENGTH = 'QUITAR_CAMPO'
					BEGIN
						SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,',', CHAR(13))
					END
					ELSE
					BEGIN
						SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,' (', @CHARACTER_MAXIMUM_LENGTH ,')', ',', CHAR(13))
					END
					--AGREGO EN LA VARIABLE @CAMPOS, EL CAMPO PARA LUEGO HACER EL INSERT
					SET @CAMPOS = CONCAT(@CAMPOS,@COLUMN_NAME,',')
					SET @CAMPOS_VALUE = CONCAT(@CAMPOS_VALUE,'@',@COLUMN_NAME,',')
				END
			END
			
			FETCH NEXT FROM CUR_CAMPOS INTO @COLUMN_NAME,@DATA_TYPE,@CHARACTER_MAXIMUM_LENGTH,@IS_NULLABLE,@IS_PRIMARY_KEY,@IS_IDENTITY
		END 

		CLOSE CUR_CAMPOS
		DEALLOCATE CUR_CAMPOS
		--LE QUITO LA ULTIMA COMA A LAS VARIABLE @CAMPOS Y @CAMPOS_VALUE SI TIENE COMAS
		IF CHARINDEX(',',@CAMPOS)>0
		BEGIN
			SET @CAMPOS=SUBSTRING(@CAMPOS,1,LEN(@CAMPOS)-1)
			SET @CAMPOS_VALUE=SUBSTRING(@CAMPOS_VALUE,1,LEN(@CAMPOS_VALUE)-1)
		END
		--GENERO LA ESTRUCTURA BEGIN - END DEL PROCEDURE
		SET @STRSQL =CONCAT(SUBSTRING(@STRSQL,1,LEN(@STRSQL)-2),CHAR(13),'AS',CHAR(13),'BEGIN',CHAR(13))
		SET @STRSQL =CONCAT(@STRSQL,CHAR(9),'INSERT INTO ',@TABLE_NAME,' (',@CAMPOS,') VALUES( ',@CAMPOS_VALUE,')')
		SET @STRSQL =CONCAT(@STRSQL,CHAR(13),'END',CHAR(13))
		SET @CAMPOS_VALUE=''

		EXEC sp_executesql @STRSQL
		/*
		PRINT @STRSQL
		PRINT 'GO'
		*/
	END

	--------CREA SP DE UPDATE
	IF @UPDATE=1
	BEGIN
		SET @CAMPOS_WHERE = CONCAT(CHAR(9),'WHERE ')
		SET @PROCEDURE= CONCAT('SP_',@TABLE_NAME,'_UPDATE')
		IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = @PROCEDURE)
		BEGIN
			SET @STRSQL = CONCAT('DROP PROCEDURE ', @PROCEDURE)
			EXEC sp_executesql @STRSQL
		END
		
		SET @STRSQL = CONCAT('CREATE PROCEDURE ',@TABLE_SCHEMA,'.',@PROCEDURE,CHAR(13))
		DECLARE CUR_CAMPOS CURSOR FOR
		SELECT 
		C.COLUMN_NAME 
		,C.DATA_TYPE
		,C.CHARACTER_MAXIMUM_LENGTH
		,C.IS_NULLABLE
		,I.IS_PRIMARY_KEY
		,COLUMNPROPERTY(OBJECT_ID(c.TABLE_NAME),c.COLUMN_NAME,'IsIdentity')  AS IS_IDENTITY
		FROM INFORMATION_SCHEMA.COLUMNS C 
		LEFT JOIN(SELECT    
			T.NAME AS TABLE_NAME,
			TC.NAME AS COLUMN_NAME,
			I.IS_PRIMARY_KEY
		FROM 
			SYS.SCHEMAS S 
			INNER JOIN SYS.TABLES T   ON S.SCHEMA_ID=T.SCHEMA_ID
			INNER JOIN SYS.INDEXES I  ON T.OBJECT_ID=I.OBJECT_ID
			INNER JOIN SYS.INDEX_COLUMNS IC ON I.OBJECT_ID=IC.OBJECT_ID 
										   AND I.INDEX_ID=IC.INDEX_ID
			INNER JOIN SYS.COLUMNS TC ON IC.OBJECT_ID=TC.OBJECT_ID 
									 AND IC.COLUMN_ID=TC.COLUMN_ID
		WHERE T.TYPE='U'
		AND I.IS_PRIMARY_KEY=1
		) I
		ON C.TABLE_NAME = I.TABLE_NAME
		AND C.COLUMN_NAME = I.COLUMN_NAME
		WHERE C.TABLE_CATALOG=@DATABASE_NAME
		AND C.TABLE_NAME=@TABLE_NAME
		ORDER BY  C.ORDINAL_POSITION

		--ACA
		--ESTO LO HAGO PARA QUE AGREGUE LOS CAMPOS QUE SON PRIMARY KEY
		--EN EL SET DEL UPDATE, SI NO HAY CAMPOS QUE NO SON PK
		DECLARE @CONT INT =(SELECT COUNT(*)
							FROM INFORMATION_SCHEMA.COLUMNS C 
							LEFT JOIN(SELECT    
								T.NAME AS TABLE_NAME,
								TC.NAME AS COLUMN_NAME,
								I.IS_PRIMARY_KEY
							FROM 
								SYS.SCHEMAS S 
								INNER JOIN SYS.TABLES T   ON S.SCHEMA_ID=T.SCHEMA_ID
								INNER JOIN SYS.INDEXES I  ON T.OBJECT_ID=I.OBJECT_ID
								INNER JOIN SYS.INDEX_COLUMNS IC ON I.OBJECT_ID=IC.OBJECT_ID 
																AND I.INDEX_ID=IC.INDEX_ID
								INNER JOIN SYS.COLUMNS TC ON IC.OBJECT_ID=TC.OBJECT_ID 
															AND IC.COLUMN_ID=TC.COLUMN_ID
							WHERE T.TYPE='U'
							AND I.IS_PRIMARY_KEY=1
							) I
							ON C.TABLE_NAME = I.TABLE_NAME
							AND C.COLUMN_NAME = I.COLUMN_NAME
							WHERE C.TABLE_CATALOG='MSC'
							AND C.TABLE_NAME='ARTICULO_PROVEEDOR'
							AND I.is_primary_key = 0)
				--FIN

		OPEN CUR_CAMPOS

		FETCH NEXT FROM CUR_CAMPOS INTO @COLUMN_NAME,@DATA_TYPE,@CHARACTER_MAXIMUM_LENGTH,@IS_NULLABLE,@IS_PRIMARY_KEY,@IS_IDENTITY
		WHILE @@fetch_status = 0
		BEGIN

			
			--ACA ARMO EL WHERE DEL PROCEDURE
			IF @IS_PRIMARY_KEY = 1
			BEGIN
				SET @CAMPOS_WHERE = CONCAT (@CAMPOS_WHERE,@COLUMN_NAME,' = @',@COLUMN_NAME, CHAR(13),CHAR(9),'AND ')
			END
		    --SI EL CAMPO NO TIENE LONGITUD, NO LA AGREGO EN LA DECLARACION DE VARIABLES
			IF @CHARACTER_MAXIMUM_LENGTH IS NULL
			BEGIN
				
				SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,',', CHAR(13))
				
								
				IF (@IS_PRIMARY_KEY IS NULL AND @IS_IDENTITY = 0) OR (@CONT = 0 AND @IS_IDENTITY = 0)
				BEGIN
					SET @CAMPOS_VALUE = CONCAT(@CAMPOS_VALUE,@COLUMN_NAME,'= @',@COLUMN_NAME,',')
				END

			END
			ELSE
			 --SI EL CAMPO TIENE LONGITUD, LO AGREGO EN LA DECLARACION DE VARIABLES
			BEGIN
				
				SET @CHARACTER_MAXIMUM_LENGTH = (SELECT CASE @CHARACTER_MAXIMUM_LENGTH
					--ESTO ES POR SI EL VALOR DE LA VARIABLE ES -1 (MAX)
					WHEN '-1' THEN  'MAX'
					--ESTO ES POR SI EL TIPO DE DATO ES NTEXT
					WHEN '1073741823' THEN 'QUITAR_CAMPO'
					ELSE 
						@CHARACTER_MAXIMUM_LENGTH
					END)

				IF @CHARACTER_MAXIMUM_LENGTH = 'QUITAR_CAMPO'
				BEGIN
					SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,',', CHAR(13))
				END
				ELSE
				BEGIN
					SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,' (', @CHARACTER_MAXIMUM_LENGTH ,')', ',', CHAR(13))
				END

				IF (@IS_PRIMARY_KEY IS NULL AND @IS_IDENTITY = 0) OR (@CONT = 0 AND @IS_IDENTITY = 0)	
				BEGIN
					SET @CAMPOS_VALUE = CONCAT(@CAMPOS_VALUE,@COLUMN_NAME,'= @',@COLUMN_NAME,',')
				END

			END
			
			FETCH NEXT FROM CUR_CAMPOS INTO @COLUMN_NAME,@DATA_TYPE,@CHARACTER_MAXIMUM_LENGTH,@IS_NULLABLE,@IS_PRIMARY_KEY,@IS_IDENTITY
		END 

		CLOSE CUR_CAMPOS
		DEALLOCATE CUR_CAMPOS
		--LE QUITO LA ULTIMA COMA A LAS VARIABLE @CAMPOS_VALUE SI TIENE COMAS
		IF CHARINDEX(',',@CAMPOS_VALUE)>0
		BEGIN
			SET @CAMPOS_VALUE=SUBSTRING(@CAMPOS_VALUE,1,LEN(@CAMPOS_VALUE)-1)
		END
		
		--GENERO LA ESTRUCTURA BEGIN - END DEL PROCEDURE
		SET @CAMPOS_WHERE = SUBSTRING(@CAMPOS_WHERE,1,LEN(@CAMPOS_WHERE)-3)
		SET @STRSQL = CONCAT(SUBSTRING(@STRSQL,1,LEN(@STRSQL)-2),CHAR(13),'AS',CHAR(13),'BEGIN',CHAR(13))
		SET @STRSQL = CONCAT(@STRSQL,CHAR(9),'UPDATE ',@TABLE_NAME,' SET ',@CAMPOS_VALUE,CHAR(13),@CAMPOS_WHERE)
		SET @STRSQL =CONCAT(@STRSQL,CHAR(13),'END',CHAR(13))
		SET @CAMPOS_VALUE=''
		SET @CAMPOS_WHERE=''

		EXEC sp_executesql @STRSQL
		/*
		PRINT @STRSQL
		PRINT 'GO'
		*/
	END

	--------CREA SP DE DELETE
	IF @DELETE=1
	BEGIN
		SET @CAMPOS_WHERE = CONCAT(CHAR(9),'WHERE ')
		SET @PROCEDURE= CONCAT('SP_',@TABLE_NAME,'_DELETE')
		IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = @PROCEDURE)
		BEGIN
			SET @STRSQL = CONCAT('DROP PROCEDURE ', @PROCEDURE)
			EXEC sp_executesql @STRSQL
		END
		
		SET @STRSQL = CONCAT('CREATE PROCEDURE ',@TABLE_SCHEMA,'.',@PROCEDURE,CHAR(13))
		DECLARE CUR_CAMPOS CURSOR FOR
		SELECT 
		C.COLUMN_NAME 
		,C.DATA_TYPE
		,C.CHARACTER_MAXIMUM_LENGTH
		,C.IS_NULLABLE
		,I.IS_PRIMARY_KEY
		,COLUMNPROPERTY(OBJECT_ID(c.TABLE_NAME),c.COLUMN_NAME,'IsIdentity')  AS IS_IDENTITY
		FROM INFORMATION_SCHEMA.COLUMNS C 
		LEFT JOIN(SELECT    
			T.NAME AS TABLE_NAME,
			TC.NAME AS COLUMN_NAME,
			I.IS_PRIMARY_KEY
		FROM 
			SYS.SCHEMAS S 
			INNER JOIN SYS.TABLES T   ON S.SCHEMA_ID=T.SCHEMA_ID
			INNER JOIN SYS.INDEXES I  ON T.OBJECT_ID=I.OBJECT_ID
			INNER JOIN SYS.INDEX_COLUMNS IC ON I.OBJECT_ID=IC.OBJECT_ID 
										   AND I.INDEX_ID=IC.INDEX_ID
			INNER JOIN SYS.COLUMNS TC ON IC.OBJECT_ID=TC.OBJECT_ID 
									 AND IC.COLUMN_ID=TC.COLUMN_ID
		WHERE T.TYPE='U'
		AND I.IS_PRIMARY_KEY=1
		) I
		ON C.TABLE_NAME = I.TABLE_NAME
		AND C.COLUMN_NAME = I.COLUMN_NAME
		WHERE C.TABLE_CATALOG=@DATABASE_NAME
		AND C.TABLE_NAME=@TABLE_NAME
		ORDER BY  C.ORDINAL_POSITION

		OPEN CUR_CAMPOS

		FETCH NEXT FROM CUR_CAMPOS INTO @COLUMN_NAME,@DATA_TYPE,@CHARACTER_MAXIMUM_LENGTH,@IS_NULLABLE,@IS_PRIMARY_KEY,@IS_IDENTITY
		WHILE @@fetch_status = 0
		BEGIN
			--ACA ARMO EL WHERE DEL PROCEDURE
			IF @IS_PRIMARY_KEY = 1
			BEGIN
				SET @CAMPOS_WHERE = CONCAT (@CAMPOS_WHERE,@COLUMN_NAME,' = @',@COLUMN_NAME, CHAR(13),CHAR(9),'AND ')
			
				--SI EL CAMPO NO TIENE LONGITUD, NO LA AGREGO EN LA DECLARACION DE VARIABLES
				IF @CHARACTER_MAXIMUM_LENGTH IS NULL
				BEGIN
				
					SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,',', CHAR(13))
					
					IF @IS_PRIMARY_KEY IS NULL AND @IS_IDENTITY = 0
					BEGIN
						SET @CAMPOS_VALUE = CONCAT(@CAMPOS_VALUE,@COLUMN_NAME,'= @',@COLUMN_NAME,',')
					END
	
				END
				ELSE
				 --SI EL CAMPO TIENE LONGITUD, LO AGREGO EN LA DECLARACION DE VARIABLES
				BEGIN
				
					SET @CHARACTER_MAXIMUM_LENGTH = (SELECT CASE @CHARACTER_MAXIMUM_LENGTH
						--ESTO ES POR SI EL VALOR DE LA VARIABLE ES -1 (MAX)
						WHEN '-1' THEN  'MAX'
						--ESTO ES POR SI EL TIPO DE DATO ES NTEXT
						WHEN '1073741823' THEN 'QUITAR_CAMPO'
						ELSE 
							@CHARACTER_MAXIMUM_LENGTH
						END)

					IF @CHARACTER_MAXIMUM_LENGTH = 'QUITAR_CAMPO'
					BEGIN
						SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,',', CHAR(13))
					END
					ELSE
					BEGIN
						SET @STRSQL = CONCAT(@STRSQL,'@', @COLUMN_NAME,' ',@DATA_TYPE,' (', @CHARACTER_MAXIMUM_LENGTH ,')', ',', CHAR(13))
					END
				
				END
			END
			
			FETCH NEXT FROM CUR_CAMPOS INTO @COLUMN_NAME,@DATA_TYPE,@CHARACTER_MAXIMUM_LENGTH,@IS_NULLABLE,@IS_PRIMARY_KEY,@IS_IDENTITY
		END 

		CLOSE CUR_CAMPOS
		DEALLOCATE CUR_CAMPOS
		
		--LE QUITO LA ULTIMA COMA A LAS VARIABLE @CAMPOS_VALUE SI TIENE COMAS
		IF CHARINDEX(',',@CAMPOS_VALUE)>0
		BEGIN
			SET @CAMPOS_VALUE=SUBSTRING(@CAMPOS_VALUE,1,LEN(@CAMPOS_VALUE)-1)
		END
						
		--GENERO LA ESTRUCTURA BEGIN - END DEL PROCEDURE
		SET @CAMPOS_WHERE = SUBSTRING(@CAMPOS_WHERE,1,LEN(@CAMPOS_WHERE)-3)
		SET @STRSQL = CONCAT(SUBSTRING(@STRSQL,1,LEN(@STRSQL)-2),CHAR(13),'AS',CHAR(13),'BEGIN',CHAR(13))
		SET @STRSQL = CONCAT(@STRSQL,CHAR(9),'DELETE ',@TABLE_NAME,CHAR(13),@CAMPOS_WHERE)
		SET @STRSQL =CONCAT(@STRSQL,CHAR(13),'END',CHAR(13))
		SET @CAMPOS_VALUE=''
		SET @CAMPOS_WHERE=''

		EXEC sp_executesql @STRSQL
		/*
		PRINT @STRSQL
		PRINT 'GO'
		*/
	END

	FETCH NEXT FROM CUR INTO @TABLE_NAME
END
CLOSE CUR
DEALLOCATE CUR